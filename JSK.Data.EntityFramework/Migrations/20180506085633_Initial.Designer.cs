// <auto-generated />
using JSK.Data.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace JSK.Data.EntityFramework.Migrations
{
    [DbContext(typeof(Model))]
    [Migration("20180506085633_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JSK.Domain.Entities.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsRandomQuestionsOrder");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.HasKey("TestId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("JSK.Domain.Entities.TestQuestion", b =>
                {
                    b.Property<int>("TestQuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsSingleAnswer");

                    b.Property<string>("Question")
                        .HasMaxLength(1024);

                    b.Property<int>("TestId");

                    b.HasKey("TestQuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("TestQuestions");
                });

            modelBuilder.Entity("JSK.Domain.Entities.TestQuestionAnswer", b =>
                {
                    b.Property<int>("TestQuestionAnswerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer")
                        .HasMaxLength(1024);

                    b.Property<bool>("IsCorrect");

                    b.Property<int>("TestQuestionId");

                    b.HasKey("TestQuestionAnswerId");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("TestQuestionAnswers");
                });

            modelBuilder.Entity("JSK.Domain.Entities.TestQuestion", b =>
                {
                    b.HasOne("JSK.Domain.Entities.Test", "Test")
                        .WithMany("TestQuestions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JSK.Domain.Entities.TestQuestionAnswer", b =>
                {
                    b.HasOne("JSK.Domain.Entities.TestQuestion", "TestQuestion")
                        .WithMany("TestQuestionAnswers")
                        .HasForeignKey("TestQuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
